{"ast":null,"code":"// import { configure } from \"@testing-library/react\"\n// import { createStoreHook } from \"react-redux\"\n// import { configureStore, createStore } from \"@reduxjs/toolkit\"\n// import { legacy_createStore as createStore} from 'redux'\nimport { legacy_createStore as createStore, legacy_createStore } from 'redux';\nimport { createSlice } from '@reduxjs/toolkit';\nimport { shallowEqual } from 'react-redux';\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.amount;\n    },\n    toggleCounter(state) {\n      showCounter = !showCounter;\n    }\n  }\n});\nconst counterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  if (action.type === 'increment') {\n    return {\n      counter: state.counter + 1,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === 'decrement') {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === 'increase') {\n    return {\n      counter: state.counter + action.amount,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === 'decrease') {\n    return {\n      counter: state.counter - action.amount,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === 'toggle') {\n    return {\n      counter: state.counter - action.amount,\n      showCounter: !state.showCounter\n    };\n  }\n  return state;\n};\nconst store = legacy_createStore(counterReducer);\nexport default store;","map":{"version":3,"names":["legacy_createStore","createStore","createSlice","shallowEqual","initialState","counter","showCounter","counterSlice","name","reducers","increment","state","decrement","increase","action","amount","toggleCounter","counterReducer","arguments","length","undefined","type","store"],"sources":["C:/Users/baghe/OneDrive/Desktop/new carrier/react/redux/01-starting-project/src/store/index.js"],"sourcesContent":["// import { configure } from \"@testing-library/react\"\r\n// import { createStoreHook } from \"react-redux\"\r\n// import { configureStore, createStore } from \"@reduxjs/toolkit\"\r\n// import { legacy_createStore as createStore} from 'redux'\r\nimport { legacy_createStore as createStore,legacy_createStore} from 'redux'\r\nimport { createSlice } from '@reduxjs/toolkit'\r\nimport { shallowEqual } from 'react-redux'\r\nconst initialState={counter:0,showCounter:true}\r\n\r\nconst counterSlice=createSlice({\r\n   name:'counter',\r\n   initialState,\r\n   reducers:{\r\n    increment(state){\r\nstate.counter++\r\n    },\r\n    decrement(state){\r\nstate.counter--\r\n    },\r\n    increase(state,action){\r\n       state.counter= state.counter+action.amount\r\n    },\r\n    toggleCounter(state){\r\n        showCounter=!showCounter\r\n    },\r\n\r\n   }\r\n})\r\nconst counterReducer=(state=initialState,action)=>{\r\n    if(action.type==='increment'){\r\n        return {\r\n            counter:state.counter+1,\r\n            showCounter:state.showCounter\r\n        }\r\n        \r\n    }\r\n    if(action.type==='decrement'){\r\n        return {\r\n            counter:state.counter-1,\r\n            showCounter:state.showCounter\r\n        }\r\n    }\r\n    if(action.type==='increase'){\r\n        return {\r\n            counter:state.counter+action.amount,\r\n            showCounter:state.showCounter\r\n        }\r\n    }\r\n    if(action.type==='decrease'){\r\n        return {\r\n            counter:state.counter-action.amount,\r\n            showCounter:state.showCounter\r\n        }\r\n    }\r\n    if(action.type==='toggle'){\r\n        return {\r\n            counter:state.counter-action.amount,\r\n            showCounter:!state.showCounter\r\n        }\r\n    }\r\n    return state\r\n}\r\nconst store=legacy_createStore(counterReducer)\r\n\r\n\r\nexport default store"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,kBAAkB,IAAIC,WAAW,EAACD,kBAAkB,QAAO,OAAO;AAC3E,SAASE,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,YAAY,QAAQ,aAAa;AAC1C,MAAMC,YAAY,GAAC;EAACC,OAAO,EAAC,CAAC;EAACC,WAAW,EAAC;AAAI,CAAC;AAE/C,MAAMC,YAAY,GAACL,WAAW,CAAC;EAC5BM,IAAI,EAAC,SAAS;EACdJ,YAAY;EACZK,QAAQ,EAAC;IACRC,SAASA,CAACC,KAAK,EAAC;MACpBA,KAAK,CAACN,OAAO,EAAE;IACX,CAAC;IACDO,SAASA,CAACD,KAAK,EAAC;MACpBA,KAAK,CAACN,OAAO,EAAE;IACX,CAAC;IACDQ,QAAQA,CAACF,KAAK,EAACG,MAAM,EAAC;MACnBH,KAAK,CAACN,OAAO,GAAEM,KAAK,CAACN,OAAO,GAACS,MAAM,CAACC,MAAM;IAC7C,CAAC;IACDC,aAAaA,CAACL,KAAK,EAAC;MAChBL,WAAW,GAAC,CAACA,WAAW;IAC5B;EAED;AACH,CAAC,CAAC;AACF,MAAMW,cAAc,GAAC,SAAAA,CAAA,EAA6B;EAAA,IAA5BN,KAAK,GAAAO,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAACd,YAAY;EAAA,IAACU,MAAM,GAAAI,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC3C,IAAGN,MAAM,CAACO,IAAI,KAAG,WAAW,EAAC;IACzB,OAAO;MACHhB,OAAO,EAACM,KAAK,CAACN,OAAO,GAAC,CAAC;MACvBC,WAAW,EAACK,KAAK,CAACL;IACtB,CAAC;EAEL;EACA,IAAGQ,MAAM,CAACO,IAAI,KAAG,WAAW,EAAC;IACzB,OAAO;MACHhB,OAAO,EAACM,KAAK,CAACN,OAAO,GAAC,CAAC;MACvBC,WAAW,EAACK,KAAK,CAACL;IACtB,CAAC;EACL;EACA,IAAGQ,MAAM,CAACO,IAAI,KAAG,UAAU,EAAC;IACxB,OAAO;MACHhB,OAAO,EAACM,KAAK,CAACN,OAAO,GAACS,MAAM,CAACC,MAAM;MACnCT,WAAW,EAACK,KAAK,CAACL;IACtB,CAAC;EACL;EACA,IAAGQ,MAAM,CAACO,IAAI,KAAG,UAAU,EAAC;IACxB,OAAO;MACHhB,OAAO,EAACM,KAAK,CAACN,OAAO,GAACS,MAAM,CAACC,MAAM;MACnCT,WAAW,EAACK,KAAK,CAACL;IACtB,CAAC;EACL;EACA,IAAGQ,MAAM,CAACO,IAAI,KAAG,QAAQ,EAAC;IACtB,OAAO;MACHhB,OAAO,EAACM,KAAK,CAACN,OAAO,GAACS,MAAM,CAACC,MAAM;MACnCT,WAAW,EAAC,CAACK,KAAK,CAACL;IACvB,CAAC;EACL;EACA,OAAOK,KAAK;AAChB,CAAC;AACD,MAAMW,KAAK,GAACtB,kBAAkB,CAACiB,cAAc,CAAC;AAG9C,eAAeK,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}